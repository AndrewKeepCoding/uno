parameters:
  vmImage: ''
  vmMacImage: ''
  vmMacImageTest: ''
  vmLinuxImage: ''
  vmLinuxPool: ''
  xCodeRootTest: ''
  xCodeRootBuild: ''
  poolName: ''
  UNO_UWP_BUILD: ''
  XAML_FLAVOR_BUILD: ''

jobs:
##
## X11
##

- job: Skia_Linux_Screenshot_Tests
  displayName: 'Run Skia Linux Snapshot Tests'
  timeoutInMinutes: 60
  cancelTimeoutInMinutes: 1

  pool:
    vmImage: ${{ parameters.vmLinuxImage }}

  condition: and(succeeded(), eq(variables['UNO_UWP_BUILD'], 'false'))

  variables:
    SamplesAppArtifactName: skia-generic-samples-app-WinUI
    SamplesAppArtifactPath: $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)
    UNO_UWP_BUILD: ${{ parameters.UNO_UWP_BUILD }}
    XAML_FLAVOR_BUILD: ${{ parameters.XAML_FLAVOR_BUILD }}

  steps:
  - checkout: none

  - task: DownloadPipelineArtifact@2
    displayName: Downloading $(SamplesAppArtifactName)
    inputs:
      artifact: $(SamplesAppArtifactName)
      path: $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)

  - template: templates/linux-install-deps.yml

  - script: |
        cd $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)
        xvfb-run --auto-servernum --server-args='-screen 0 1280x1024x24' sh -c '{ fluxbox & } ; dotnet SamplesApp.Skia.Generic.dll --auto-screenshots=$(build.artifactstagingdirectory)/screenshots/skia-linux-screenshots'

    displayName: Run Skia Linux Snapshot Tests

  - task: PublishBuildArtifacts@1
    condition: always()
    retryCountOnTaskFailure: 3
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uitests-results
      ArtifactType: Container

- job: Skia_Linux_Runtime_Tests_Build
  displayName: 'Run Skia Linux Runtime Tests'
  timeoutInMinutes: 60
  cancelTimeoutInMinutes: 1

  pool:
    vmImage: ${{ parameters.vmLinuxImage }}

  variables:
    SamplesAppArtifactName: skia-generic-samples-app-$(XAML_FLAVOR_BUILD)
    SamplesAppArtifactPath: $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)

    UNO_UWP_BUILD: ${{ parameters.UNO_UWP_BUILD }}
    XAML_FLAVOR_BUILD: ${{ parameters.XAML_FLAVOR_BUILD }}

  steps:

  - task: DownloadPipelineArtifact@2
    displayName: Downloading $(SamplesAppArtifactName)
    inputs:
      artifact: $(SamplesAppArtifactName)
      path: $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)

  - template: templates/dotnet-install.yml
  - template: templates/linux-install-deps.yml

  - script: |
        cd $(SamplesAppArtifactPath)
        xvfb-run --auto-servernum --server-args='-screen 0 1280x1024x24' sh -c '{ fluxbox & } ; dotnet SamplesApp.Skia.Generic.dll --runtime-tests=$(build.sourcesdirectory)/build/skia-linux-runtime-tests-results.xml'

    displayName: Run Skia  $(XAML_FLAVOR_BUILD) Runtime Tests
    env:
      SamplesAppArtifactPath: $(SamplesAppArtifactPath)
      SamplesAppArtifactName: $(SamplesAppArtifactName)

  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunTitle: 'Skia Linux $(XAML_FLAVOR_BUILD) Runtime Tests'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/build/skia-linux-runtime-tests-results.xml'
      failTaskOnFailedTests: true
      failTaskOnMissingResultsFile: true

- job: Skia_macos_Runtime_Tests_Build
  displayName: 'Run Skia macOS Runtime Tests'
  timeoutInMinutes: 60

  pool:
    vmImage: ${{ parameters.vmMacImage }}

  variables:
    SamplesAppArtifactName: skia-generic-samples-app-$(XAML_FLAVOR_BUILD)
    SamplesAppArtifactPath: $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)

    UNO_UWP_BUILD: ${{ parameters.UNO_UWP_BUILD }}
    XAML_FLAVOR_BUILD: ${{ parameters.XAML_FLAVOR_BUILD }}

  steps:


  - task: DownloadPipelineArtifact@2
    displayName: Downloading $(SamplesAppArtifactName)
    inputs:
      artifact: $(SamplesAppArtifactName)
      path: $(build.sourcesdirectory)/build/$(SamplesAppArtifactName)

  - template: templates/dotnet-install.yml

  - script: |
        cd $(SamplesAppArtifactPath)
        dotnet SamplesApp.Skia.Generic.dll --runtime-tests=$(build.sourcesdirectory)/build/skia-macos-runtime-tests-results.xml

    displayName: Run Skia  $(XAML_FLAVOR_BUILD) Runtime Tests
    env:
      SamplesAppArtifactPath: $(SamplesAppArtifactPath)
      SamplesAppArtifactName: $(SamplesAppArtifactName)

  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunTitle: 'Skia macOS $(XAML_FLAVOR_BUILD) Runtime Tests'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/build/skia-macos-runtime-tests-results.xml'
      failTaskOnFailedTests: true
      failTaskOnMissingResultsFile: true
