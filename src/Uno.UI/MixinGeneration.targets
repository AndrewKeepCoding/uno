<?xml version="1.0" encoding="utf-8" ?>
<Project>

	<PropertyGroup>
		<_T4ToolVersion>2.3.1</_T4ToolVersion>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="dotnet-t4"
						  Version="$(_T4ToolVersion)"
						  IncludeAssets="none"
						  PrivateAssets="all" />
	</ItemGroup>

	<ItemGroup>
		<Compile Remove="$(MSBuildThisFileDirectory)Mixins\**\*.cs"/>
		<None Include="$(MSBuildThisFileDirectory)Mixins\**\*.cs" />
		<None Include="$(MSBuildThisFileDirectory)Mixins\**\*.tt" />

		<Compile Include="$(MSBuildThisFileDirectory)Mixins\DependencyPropertyMixins.g.cs" />
		<Compile Include="$(MSBuildThisFileDirectory)Mixins\Android\*.g.cs" Condition="$(IsAndroid)" />
		<Compile Include="$(MSBuildThisFileDirectory)Mixins\AppleUIKit\*.g.cs" Condition="$(IsAppleUIKit)" />

		<None Remove="$(MSBuildThisFileDirectory)UI\Xaml\DependencyPropertiesImplementation.cs" />
		<Compile Remove="$(MSBuildThisFileDirectory)UI\Xaml\DependencyPropertiesImplementation.cs" />
		<None Remove="$(MSBuildThisFileDirectory)UI\Xaml\IFrameworkElementImplementation.*.cs" />
		<Compile Remove="$(MSBuildThisFileDirectory)UI\Xaml\IFrameworkElementImplementation.*.cs" />
	</ItemGroup>

	<ItemGroup>
		<None Update="$(MSBuildThisFileDirectory)Mixins\**\*.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>%(RecursiveDir)%(Filename).g.cs</LastGenOutput>
		</None>
		<Compile Update="$(MSBuildThisFileDirectory)Mixins\**\*.g.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>%(RecursiveDir)$([System.String]::new(%(FileName)).Replace('.g','.tt'))</DependentUpon>
		</Compile>
		<None Update="$(MSBuildThisFileDirectory)Mixins\**\*.g.cs">
			<DependentUpon>%(RecursiveDir)$([System.String]::new(%(FileName)).Replace('.g','.tt'))</DependentUpon>
		</None>
	</ItemGroup>

	<ItemGroup>
		<MixinInput Include="$(MSBuildThisFileDirectory)Mixins\Android\BaseActivity.Callbacks.tt" Condition="$(IsAndroid)" />
		<MixinInput Include="$(MSBuildThisFileDirectory)Mixins\Android\FrameworkElementMixins.tt" Condition="$(IsAndroid)" />
		<MixinInput Include="$(MSBuildThisFileDirectory)Mixins\DependencyPropertyMixins.tt" />
		<MixinInput Include="$(MSBuildThisFileDirectory)UI\Xaml\DependencyPropertiesImplementation.tt" />
		<MixinInput Include="$(MSBuildThisFileDirectory)UI\Xaml\IFrameworkElementImplementation.Android.tt" Condition="$(IsAndroid)" />
		<MixinInput Include="$(MSBuildThisFileDirectory)Mixins\AppleUIKit\FrameworkElementMixins.tt" Condition="$(IsAppleUIKit)" />
		<MixinInput Include="$(MSBuildThisFileDirectory)UI\Xaml\IFrameworkElementImplementation.uikit.tt" Condition="$(IsAppleUIKit)" />

		<MixinOutput Include="$(MSBuildThisFileDirectory)Mixins\Android\*.g.cs" Condition="$(IsAndroid)" />
		<MixinOutput Include="$(MSBuildThisFileDirectory)Mixins\DependencyPropertyMixins.g.cs" />
		<MixinOutput Include="$(MSBuildThisFileDirectory)Mixins\AppleUIKit\FrameworkElementMixins.g.cs" Condition="$(IsAppleUIKit)" />
	</ItemGroup>

	<!--
	DispatchToInnerBuilds is used for direct builds, CoreCompile is for
	project dependency induced builds.
	-->
	<Target Name="GenerateMixins"
		  Inputs="@(MixinInput)"
		  Outputs="@(MixinOutput)"
		  BeforeTargets="DispatchToInnerBuilds;Build;CoreCompile;_GenerateCompileDependencyCache"
		  Condition="'$(DesignTimeBuild)' != 'true'">

		<ItemGroup>
			<_t4Path Include="$(NuGetPackageRoot)/dotnet-t4/$(_T4ToolVersion)/**/t4.dll" />

			<MixinDefinition Include="$(MSBuildThisFileDirectory)MixinGenerationCore.targets" Condition="$(IsAndroid) or $(TargetFrameworks.Contains('-android'))">
				<Properties>_t4Path=@(_t4Path);InputFile=$(MSBuildThisFileDirectory)Mixins\Android\BaseActivity.Callbacks.tt;OutputPath=$(MSBuildThisFileDirectory)Mixins\Android\BaseActivity.Callbacks.g.cs</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileDirectory)MixinGenerationCore.targets" Condition="$(IsAndroid) or $(TargetFrameworks.Contains('-android'))">
				<Properties>_t4Path=@(_t4Path);InputFile=$(MSBuildThisFileDirectory)Mixins\Android\FrameworkElementMixins.tt;OutputPath=$(MSBuildThisFileDirectory)Mixins\Android\FrameworkElementMixins.g.cs</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileDirectory)MixinGenerationCore.targets">
				<Properties>_t4Path=@(_t4Path);InputFile=$(MSBuildThisFileDirectory)Mixins\DependencyPropertyMixins.tt;OutputPath=$(MSBuildThisFileDirectory)Mixins\DependencyPropertyMixins.g.cs</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileDirectory)MixinGenerationCore.targets" Condition="$(IsAppleUIKit) or $(TargetFrameworks.Contains('-ios')) or $(TargetFrameworks.Contains('-maccatalyst')) or $(TargetFrameworks.Contains('-tvos'))">
				<Properties>_t4Path=@(_t4Path);InputFile=$(MSBuildThisFileDirectory)Mixins\AppleUIKit\FrameworkElementMixins.tt;OutputPath=$(MSBuildThisFileDirectory)Mixins\AppleUIKit\FrameworkElementMixins.g.cs</Properties>
			</MixinDefinition>
		</ItemGroup>

		<Message Text="Generating mixins" Importance="high" />

		<!-- This allows for the mixins to generate in parallel -->
		<MSBuild BuildInParallel="true" Projects="@(MixinDefinition)" StopOnFirstFailure="True" Targets="_InnerGenerateMixins" />

		<ItemGroup>
			<!--
	  Restore the compile items for projects using globbing
	  that may not have the .cs files as explicit Compile items
	  -->
			<Compile Remove="$(MSBuildThisFileDirectory)Mixins/**/*.cs" />
			<Compile Include="$(MSBuildThisFileDirectory)Mixins\DependencyPropertyMixins.g.cs" />
			<Compile Include="$(MSBuildThisFileDirectory)Mixins\Android\*.g.cs" Condition="$(IsAndroid)" />
			<Compile Include="$(MSBuildThisFileDirectory)Mixins\AppleUIKit\*.g.cs" Condition="$(IsAppleUIKit)" />
		</ItemGroup>
	</Target>

</Project>
