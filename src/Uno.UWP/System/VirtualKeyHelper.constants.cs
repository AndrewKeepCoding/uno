using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Windows.System;

internal static partial class VirtualKeyHelper
{
	public const VirtualKey LeftMouseButton = (VirtualKey)0x01; // Left mouse button
	public const VirtualKey RightMouseButton = (VirtualKey)0x02; // Right mouse button
	public const VirtualKey Cancel = (VirtualKey)0x03; // Control-break processing
	public const VirtualKey MiddleMouseButton = (VirtualKey)0x04; // Middle mouse button
	public const VirtualKey XButton1 = (VirtualKey)0x05; // X1 mouse button
	public const VirtualKey XButton2 = (VirtualKey)0x06; // X2 mouse button
	public const VirtualKey Back = (VirtualKey)0x08; // BACKSPACE key
	public const VirtualKey Tab = (VirtualKey)0x09; // TAB key
	public const VirtualKey Clear = (VirtualKey)0x0C; // CLEAR key
	public const VirtualKey Return = (VirtualKey)0x0D; // ENTER key
	public const VirtualKey Shift = (VirtualKey)0x10; // SHIFT key
	public const VirtualKey Control = (VirtualKey)0x11; // CTRL key
	public const VirtualKey Menu = (VirtualKey)0x12; // ALT key
	public const VirtualKey Pause = (VirtualKey)0x13; // PAUSE key
	public const VirtualKey Capital = (VirtualKey)0x14; // CAPS LOCK key
	public const VirtualKey Kana = (VirtualKey)0x15; // IME Kana mode
	public const VirtualKey Hangeul = (VirtualKey)0x15; // IME Hangul mode
	public const VirtualKey ImeOn = (VirtualKey)0x16; // IME On
	public const VirtualKey Junja = (VirtualKey)0x17; // IME Junja mode
	public const VirtualKey Final = (VirtualKey)0x18; // IME final mode
	public const VirtualKey Hanja = (VirtualKey)0x19; // IME Hanja mode
	public const VirtualKey Kanji = (VirtualKey)0x19; // IME Kanji mode
	public const VirtualKey ImeOff = (VirtualKey)0x1A; // IME Off
	public const VirtualKey Escape = (VirtualKey)0x1B; // ESC key
	public const VirtualKey Convert = (VirtualKey)0x1C; // IME convert
	public const VirtualKey NonConvert = (VirtualKey)0x1D; // IME nonconvert
	public const VirtualKey Accept = (VirtualKey)0x1E; // IME accept
	public const VirtualKey ModeChange = (VirtualKey)0x1F; // IME mode change request
	public const VirtualKey Space = (VirtualKey)0x20; // SPACEBAR
	public const VirtualKey Prior = (VirtualKey)0x21; // PAGE UP key
	public const VirtualKey Next = (VirtualKey)0x22; // PAGE DOWN key
	public const VirtualKey End = (VirtualKey)0x23; // END key
	public const VirtualKey Home = (VirtualKey)0x24; // HOME key
	public const VirtualKey Left = (VirtualKey)0x25; // LEFT ARROW key
	public const VirtualKey Up = (VirtualKey)0x26; // UP ARROW key
	public const VirtualKey Right = (VirtualKey)0x27; // RIGHT ARROW key
	public const VirtualKey Down = (VirtualKey)0x28; // DOWN ARROW key
	public const VirtualKey Select = (VirtualKey)0x29; // SELECT key
	public const VirtualKey Print = (VirtualKey)0x2A; // PRINT key
	public const VirtualKey Execute = (VirtualKey)0x2B; // EXECUTE key
	public const VirtualKey Snapshot = (VirtualKey)0x2C; // PRINT SCREEN key
	public const VirtualKey Insert = (VirtualKey)0x2D; // INS key
	public const VirtualKey Delete = (VirtualKey)0x2E; // DEL key
	public const VirtualKey Help = (VirtualKey)0x2F; // HELP key
	public const VirtualKey Key0 = (VirtualKey)0x30; // 0 key
	public const VirtualKey Key1 = (VirtualKey)0x31; // 1 key
	public const VirtualKey Key2 = (VirtualKey)0x32; // 2 key
	public const VirtualKey Key3 = (VirtualKey)0x33; // 3 key
	public const VirtualKey Key4 = (VirtualKey)0x34; // 4 key
	public const VirtualKey Key5 = (VirtualKey)0x35; // 5 key
	public const VirtualKey Key6 = (VirtualKey)0x36; // 6 key
	public const VirtualKey Key7 = (VirtualKey)0x37; // 7 key
	public const VirtualKey Key8 = (VirtualKey)0x38; // 8 key
	public const VirtualKey Key9 = (VirtualKey)0x39; // 9 key
	public const VirtualKey A = (VirtualKey)0x41; // A key
	public const VirtualKey B = (VirtualKey)0x42; // B key
	public const VirtualKey C = (VirtualKey)0x43; // C key
	public const VirtualKey D = (VirtualKey)0x44; // D key
	public const VirtualKey E = (VirtualKey)0x45; // E key
	public const VirtualKey F = (VirtualKey)0x46; // F key
	public const VirtualKey G = (VirtualKey)0x47; // G key
	public const VirtualKey H = (VirtualKey)0x48; // H key
	public const VirtualKey I = (VirtualKey)0x49; // I key
	public const VirtualKey J = (VirtualKey)0x4A; // J key
	public const VirtualKey K = (VirtualKey)0x4B; // K key
	public const VirtualKey L = (VirtualKey)0x4C; // L key
	public const VirtualKey M = (VirtualKey)0x4D; // M key
	public const VirtualKey N = (VirtualKey)0x4E; // N key
	public const VirtualKey O = (VirtualKey)0x4F; // O key
	public const VirtualKey P = (VirtualKey)0x50; // P key
	public const VirtualKey Q = (VirtualKey)0x51; // Q key
	public const VirtualKey R = (VirtualKey)0x52; // R key
	public const VirtualKey S = (VirtualKey)0x53; // S key
	public const VirtualKey T = (VirtualKey)0x54; // T key
	public const VirtualKey U = (VirtualKey)0x55; // U key
	public const VirtualKey V = (VirtualKey)0x56; // V key
	public const VirtualKey W = (VirtualKey)0x57; // W key
	public const VirtualKey X = (VirtualKey)0x58; // X key
	public const VirtualKey Y = (VirtualKey)0x59; // Y key
	public const VirtualKey Z = (VirtualKey)0x5A; // Z key
	public const VirtualKey LeftWindows = (VirtualKey)0x5B; // Left Windows key
	public const VirtualKey RightWindows = (VirtualKey)0x5C; // Right Windows key
	public const VirtualKey Applications = (VirtualKey)0x5D; // Applications key
	public const VirtualKey Sleep = (VirtualKey)0x5F; // Sleep key
	public const VirtualKey Numpad0 = (VirtualKey)0x60; // Numeric keypad 0 key
	public const VirtualKey Numpad1 = (VirtualKey)0x61; // Numeric keypad 1 key
	public const VirtualKey Numpad2 = (VirtualKey)0x62; // Numeric keypad 2 key
	public const VirtualKey Numpad3 = (VirtualKey)0x63; // Numeric keypad 3 key
	public const VirtualKey Numpad4 = (VirtualKey)0x64; // Numeric keypad 4 key
	public const VirtualKey Numpad5 = (VirtualKey)0x65; // Numeric keypad 5 key
	public const VirtualKey Numpad6 = (VirtualKey)0x66; // Numeric keypad 6 key
	public const VirtualKey Numpad7 = (VirtualKey)0x67; // Numeric keypad 7 key
	public const VirtualKey Numpad8 = (VirtualKey)0x68; // Numeric keypad 8 key
	public const VirtualKey Numpad9 = (VirtualKey)0x69; // Numeric keypad 9 key
	public const VirtualKey Multiply = (VirtualKey)0x6A; // Multiply key
	public const VirtualKey Add = (VirtualKey)0x6B; // Add key
	public const VirtualKey Separator = (VirtualKey)0x6C; // Separator key
	public const VirtualKey Subtract = (VirtualKey)0x6D; // Subtract key
	public const VirtualKey Decimal = (VirtualKey)0x6E; // Decimal key
	public const VirtualKey Divide = (VirtualKey)0x6F; // Divide key
	public const VirtualKey F1 = (VirtualKey)0x70; // F1 key
	public const VirtualKey F2 = (VirtualKey)0x71; // F2 key
	public const VirtualKey F3 = (VirtualKey)0x72; // F3 key
	public const VirtualKey F4 = (VirtualKey)0x73; // F4 key
	public const VirtualKey F5 = (VirtualKey)0x74; // F5 key
	public const VirtualKey F6 = (VirtualKey)0x75; // F6 key
	public const VirtualKey F7 = (VirtualKey)0x76; // F7 key
	public const VirtualKey F8 = (VirtualKey)0x77; // F8 key
	public const VirtualKey F9 = (VirtualKey)0x78; // F9 key
	public const VirtualKey F10 = (VirtualKey)0x79; // F10 key
	public const VirtualKey F11 = (VirtualKey)0x7A; // F11 key
	public const VirtualKey F12 = (VirtualKey)0x7B; // F12 key
	public const VirtualKey F13 = (VirtualKey)0x7C; // F13 key
	public const VirtualKey F14 = (VirtualKey)0x7D; // F14 key
	public const VirtualKey F15 = (VirtualKey)0x7E; // F15 key
	public const VirtualKey F16 = (VirtualKey)0x7F; // F16 key
	public const VirtualKey F17 = (VirtualKey)0x80; // F17 key
	public const VirtualKey F18 = (VirtualKey)0x81; // F18 key
	public const VirtualKey F19 = (VirtualKey)0x82; // F19 key
	public const VirtualKey F20 = (VirtualKey)0x83; // F20 key
	public const VirtualKey F21 = (VirtualKey)0x84; // F21 key
	public const VirtualKey F22 = (VirtualKey)0x85; // F22 key
	public const VirtualKey F23 = (VirtualKey)0x86; // F23 key
	public const VirtualKey F24 = (VirtualKey)0x87; // F24 key
	public const VirtualKey NumLock = (VirtualKey)0x90; // NUM LOCK key
	public const VirtualKey Scroll = (VirtualKey)0x91; // SCROLL LOCK key
	public const VirtualKey LeftShift = (VirtualKey)0xA0; // Left SHIFT key
	public const VirtualKey RightShift = (VirtualKey)0xA1; // Right SHIFT key
	public const VirtualKey LeftControl = (VirtualKey)0xA2; // Left CONTROL key
	public const VirtualKey RightControl = (VirtualKey)0xA3; // Right CONTROL key
	public const VirtualKey LeftAlt = (VirtualKey)0xA4; // Left ALT key
	public const VirtualKey RightAlt = (VirtualKey)0xA5; // Right ALT key
	public const VirtualKey BrowserBack = (VirtualKey)0xA6; // Browser Back key
	public const VirtualKey BrowserForward = (VirtualKey)0xA7; // Browser Forward key
	public const VirtualKey BrowserRefresh = (VirtualKey)0xA8; // Browser Refresh key
	public const VirtualKey BrowserStop = (VirtualKey)0xA9; // Browser Stop key
	public const VirtualKey BrowserSearch = (VirtualKey)0xAA; // Browser Search key
	public const VirtualKey BrowserFavorites = (VirtualKey)0xAB; // Browser Favorites key
	public const VirtualKey BrowserHome = (VirtualKey)0xAC; // Browser Start and Home key
	public const VirtualKey VolumeMute = (VirtualKey)0xAD; // Volume Mute key
	public const VirtualKey VolumeDown = (VirtualKey)0xAE; // Volume Down key
	public const VirtualKey VolumeUp = (VirtualKey)0xAF; // Volume Up key
	public const VirtualKey MediaNextTrack = (VirtualKey)0xB0; // Next Track key
	public const VirtualKey MediaPrevTrack = (VirtualKey)0xB1; // Previous Track key
	public const VirtualKey MediaStop = (VirtualKey)0xB2; // Stop Media key
	public const VirtualKey MediaPlayPause = (VirtualKey)0xB3; // Play/Pause Media key
	public const VirtualKey LaunchMail = (VirtualKey)0xB4; // Start Mail key
	public const VirtualKey LaunchMediaSelect = (VirtualKey)0xB5; // Select Media key
	public const VirtualKey LaunchApp1 = (VirtualKey)0xB6; // Start Application 1 key
	public const VirtualKey LaunchApp2 = (VirtualKey)0xB7; // Start Application 2 key
	public const VirtualKey Oem1 = (VirtualKey)0xBA; // OEM 1 key
	public const VirtualKey OemPlus = (VirtualKey)0xBB; // OEM Plus key
	public const VirtualKey OemComma = (VirtualKey)0xBC; // OEM Comma key
	public const VirtualKey OemMinus = (VirtualKey)0xBD; // OEM Minus key
	public const VirtualKey OemPeriod = (VirtualKey)0xBE; // OEM Period key
	public const VirtualKey Oem2 = (VirtualKey)0xBF; // OEM 2 key
	public const VirtualKey Oem3 = (VirtualKey)0xC0; // OEM 3 key
	public const VirtualKey Oem4 = (VirtualKey)0xDB; // OEM 4 key
	public const VirtualKey Oem5 = (VirtualKey)0xDC; // OEM 5 key
	public const VirtualKey Oem6 = (VirtualKey)0xDD; // OEM 6 key
	public const VirtualKey Oem7 = (VirtualKey)0xDE; // OEM 7 key
	public const VirtualKey Oem8 = (VirtualKey)0xDF; // OEM 8 key
	public const VirtualKey ProcessKey = (VirtualKey)0xE5; // Process key
	public const VirtualKey Packet = (VirtualKey)0xE7; // Packet key
	public const VirtualKey Attn = (VirtualKey)0xF6; // Attn key
	public const VirtualKey CrSel = (VirtualKey)0xF7; // CrSel key
	public const VirtualKey ExSel = (VirtualKey)0xF8; // ExSel key
	public const VirtualKey EraseEof = (VirtualKey)0xF9; // Erase EOF key
	public const VirtualKey Play = (VirtualKey)0xFA; // Play key
	public const VirtualKey Zoom = (VirtualKey)0xFB; // Zoom key
	public const VirtualKey NoName = (VirtualKey)0xFC; // NoName key
	public const VirtualKey Pa1 = (VirtualKey)0xFD; // Pa1 key
	public const VirtualKey OemClear = (VirtualKey)0xFE; // OEM Clear key
}
